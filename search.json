[{"path":"https://appsilon.github.io/shiny.i18n/articles/basics.html","id":"back-end-translation","dir":"Articles","previous_headings":"","what":"Back-end translation","title":"Introduction to shiny.i18n","text":"Imagine Shiny app like one . Now, like translate content application using translations file translation.json. format translation file can find tutorial. First , need load data create Translator object: Next just surround text app i18n$translate i18n$t (short) tags. example: thing left selecting target translation language. i18n$set_translation_language method takes argument code language. full application might look now like : want display text different language, just change code “en” language “translation.json” file, e.g. “pl” Polish.","code":"library(shiny) library(shiny.i18n)  ui <- fluidPage(p(\"Hello\"))  server <- function(input, output) {}  shinyApp(ui, server) i18n <- Translator$new(translation_json_path = \"translation.json\") i18n$translate(\"Hello\") # or i18n$t(\"Hello\") library(shiny) library(shiny.i18n)  i18n <- Translator$new(translation_json_path = \"translation.json\")  i18n$set_translation_language(\"en\")  ui <- fluidPage(p(i18n$t(\"Hello\")))  server <- function(input, output) {}  shinyApp(ui, server)"},{"path":"https://appsilon.github.io/shiny.i18n/articles/basics.html","id":"live-language-change","dir":"Articles","previous_headings":"","what":"Live language change","title":"Introduction to shiny.i18n","text":"example demonstrates run various instances app different languages. want enable user change language dynamically? two options .","code":""},{"path":"https://appsilon.github.io/shiny.i18n/articles/basics.html","id":"option-a","dir":"Articles","previous_headings":"Live language change","what":"Option (a)","title":"Introduction to shiny.i18n","text":"can make i18n reactive variable accepts language code UI input, e.g. input$selected_language. See full example .","code":"translator <- Translator$new(translation_json_path = \"translation.json\")  server <- function(input, output, session) {    i18n <- reactive({     selected <- input$selected_language     if (length(selected) > 0 && selected %in% translator$get_languages()) {       translator$set_translation_language(selected)     }     translator   }) }"},{"path":"https://appsilon.github.io/shiny.i18n/articles/basics.html","id":"option-b","dir":"Articles","previous_headings":"Live language change","what":"Option (b)","title":"Introduction to shiny.i18n","text":"Alternatively, may introduce UI following statement: usei18n(i18n). tell shiny.i18n use JS script nested header app perform translation. See minimal example:","code":"library(shiny) library(shiny.i18n)  i18n <- Translator$new(translation_json_path = \"translation.json\")  i18n$set_translation_language(\"en\")  ui <- fluidPage(usei18n(i18n),                 p(i18n$t(\"Hello\")),                 actionButton(\"go\", \"GO!\")       )  server <- function(input, output, session) {   observeEvent(input$go,{        update_lang(session, \"pl\")   }) }  shinyApp(ui, server)"},{"path":"https://appsilon.github.io/shiny.i18n/articles/basics.html","id":"automatic-translations","dir":"Articles","previous_headings":"","what":"Automatic translations","title":"Introduction to shiny.i18n","text":"Sometimes time translate application many different languages number automatic translation services public API. shiny.i18n ’s easy take advantage . Remember though need set-credential service want use first. example internationalize app Google API (note replace i18n$t i18n$). (! Note need check provider API specific language code) ’s end tutorial. Hopefully learned something new shiny.i18n. Check examples examples folder shiny.i18n code repository.","code":"library(shiny) library(shiny.i18n) library(googleLanguageR)   # setting up credentials to google cloud API (see more in googleLanguageR docs) i18n <- Translator$new(automatic = TRUE)  i18n$set_translation_language(\"de\")  ui <- fluidPage(p(i18n$at(\"Hello\")))  server <- function(input, output) {}  shinyApp(ui, server)"},{"path":"https://appsilon.github.io/shiny.i18n/articles/rhino.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"shiny.i18n in Rhino applications","text":"tutorial shows easy way implementing internationalization Shiny application built using Rhino framework. goal recreate simple app can found examples, Rhino setup.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/articles/rhino.html","id":"setup-rhino-application","dir":"Articles","previous_headings":"","what":"Setup Rhino application","title":"shiny.i18n in Rhino applications","text":"first step create Rhino application. , make sure rhino installed: Now, initialize new Rhino application. can either using RStudio Wizard function rhino::init(\"rhino_i18n\"). details create Rhino app can found Rhino tutorial. initializing application, next step install shiny.i18n add dependencies. NOTE: shiny.i18n compatibility rhino currently available development version. installation guide updated CRAN release. R console run: , modify dependencies.R file: update renv.lock running R console:","code":"install.packages(\"rhino\") renv::install(\"remotes\") remotes::install_github(\"Appsilon/shiny.i18n\") # dependencies.R  library(rhino) library(shiny.i18n) renv::snapshot()"},{"path":"https://appsilon.github.io/shiny.i18n/articles/rhino.html","id":"build-a-basic-application","dir":"Articles","previous_headings":"","what":"Build a basic application","title":"shiny.i18n in Rhino applications","text":"next step fill application content. use example application can found examples.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/articles/rhino.html","id":"initial-application","dir":"Articles","previous_headings":"Build a basic application","what":"Initial application","title":"shiny.i18n in Rhino applications","text":"First, let’s implement basic version app (without internationalization). Modify app/main.R following way: run shiny::runApp() see slightly modified version “Old Faithful Geyser Data” app.","code":"# app/main.R  box::use(   shiny,   graphics[hist], )  #' @export ui <- function(id) {   ns <- shiny$NS(id)   shiny$fluidPage(     shiny$div(       style = \"float: right;\",       shiny$selectInput(         ns(\"selected_language\"),         \"Change language\",         choices = c(\"en\", \"pl\", \"it\")       )     ),     shiny$titlePanel(\"Hello Shiny!\", windowTitle = NULL),     shiny$sidebarLayout(       shiny$sidebarPanel(         shiny$sliderInput(           ns(\"bins\"),           \"Number of bins:\",           min = 1,           max = 50,           value = 30         )       ),       shiny$mainPanel(         shiny$plotOutput(ns(\"distPlot\")),         shiny$p(\"This is description of the plot.\")       )     )   ) }  #' @export server <- function(id) {   shiny$moduleServer(id, function(input, output, session) {     output$distPlot <- shiny$renderPlot({       x <- datasets::faithful[, 2]       bins <- seq(min(x), max(x), length.out = input$bins + 1)       hist(         x,         breaks = bins,         col = \"darkgray\",         border = \"white\",         main = \"Histogram of x\",         ylab = \"Frequency\"       )     })   }) }"},{"path":"https://appsilon.github.io/shiny.i18n/articles/rhino.html","id":"add-translator","dir":"Articles","previous_headings":"Build a basic application","what":"Add translator","title":"shiny.i18n in Rhino applications","text":"next step add instance shiny.i18n::Translator class provide translations. shiny.i18n, translations can added CSV JSON files - use latter. Create app/translations directory, inside add translations.json file: Now, need create Translator pass path translation file. app/main.R file add: next step choose default translation language:","code":"{   \"languages\": [\"en\", \"pl\", \"it\"],   \"translation\": [       {         \"en\": \"Hello Shiny!\",         \"pl\": \"Witaj Shiny!\",         \"it\": \"Ciao Shiny!\"       },       {         \"en\": \"Number of bins:\",         \"pl\": \"Liczba podziałek:\",         \"it\": \"Numero di intervalli\"       },       {         \"en\": \"This is description of the plot.\",         \"pl\": \"To jest opis obrazka.\",         \"it\": \"Questa è la descrizione della grafico.\"       },       {         \"en\": \"Histogram of x\",         \"pl\": \"Histogram x\",         \"it\": \"Istogramma di x\"       },       {         \"en\": \"Frequency\",         \"pl\": \"Częstotliwość\",         \"it\": \"Frequenza\"       },       {         \"en\": \"Change language\",         \"pl\": \"Wybierz język\",         \"it\": \"Cambia lingua\"       }     ] } # app/main.R  box::use(   shiny,   graphics[hist],   shiny.i18n[Translator], )  i18n <- Translator$new(translation_json_path = \"app/translations/translations.json\")  #' @export ui <- function(id) {  ... # app/main.R  box::use(   shiny,   graphics[hist],   shiny.i18n[Translator], )  i18n <- Translator$new(translation_json_path = \"app/translations/translations.json\") i18n$set_translation_language(\"en\")  #' @export ui <- function(id) {  ..."},{"path":"https://appsilon.github.io/shiny.i18n/articles/rhino.html","id":"translate-ui-elements","dir":"Articles","previous_headings":"Build a basic application","what":"Translate UI elements","title":"shiny.i18n in Rhino applications","text":"Now ready start plugging translator application. First, language selection input use languages available translator start default language selected. also need add shiny.i18n dependencies add translator UI calling usei18n(): still miss connection select input translation language change. achieve , use observeEvent shiny.i18n::update_lang function: next step translate text UI part application. , simply wrap text i18n$translate() method: now run app, see changing language updates application text proper translation:","code":"# app/main.R  box::use(   shiny,   graphics[hist],   shiny.i18n[Translator], )  i18n <- Translator$new(translation_json_path = \"app/translations/translations.json\") i18n$set_translation_language(\"en\")  #' @export ui <- function(id) {   ns <- shiny$NS(id)   shiny$fluidPage(     shiny$div(       style = \"float: right;\",       shiny$selectInput(         ns(\"selected_language\"),         \"Change language\",         choices = i18n$get_languages(),         selected = i18n$get_key_translation()       )     ),     shiny$titlePanel(\"Hello Shiny!\", windowTitle = NULL),  ... # app/main.R  box::use(   shiny,   graphics[hist],   shiny.i18n[Translator, usei18n], )  i18n <- Translator$new(translation_json_path = \"app/translations/translations.json\") i18n$set_translation_language(\"en\")  #' @export ui <- function(id) {   ns <- shiny$NS(id)   shiny$fluidPage(     usei18n(i18n),     shiny$div(       style = \"float: right;\",       shiny$selectInput(         ns(\"selected_language\"),         \"Change language\",         choices = i18n$get_languages(),         selected = i18n$get_key_translation()       )     ),  ... # app/main.R  box::use(   shiny,   graphics[hist],   shiny.i18n[Translator, usei18n, update_lang], )  i18n <- Translator$new(translation_json_path = \"app/translations/translations.json\") i18n$set_translation_language(\"en\")  #' @export ui <- function(id) {   ns <- shiny$NS(id)   shiny$fluidPage(     usei18n(i18n),     shiny$div(       style = \"float: right;\",       shiny$selectInput(         ns(\"selected_language\"),         \"Change language\",         choices = i18n$get_languages(),         selected = i18n$get_key_translation()       )     ),     shiny$titlePanel(\"Hello Shiny!\", windowTitle = NULL),     shiny$sidebarLayout(       shiny$sidebarPanel(         shiny$sliderInput(           ns(\"bins\"),           \"Number of bins:\",           min = 1,           max = 50,           value = 30         )       ),       shiny$mainPanel(         shiny$plotOutput(ns(\"distPlot\")),         shiny$p(\"This is description of the plot.\")       )     )   ) }  #' @export server <- function(id) {   shiny$moduleServer(id, function(input, output, session) {     shiny$observeEvent(input$selected_language, {       update_lang(input$selected_language)     })      output$distPlot <- shiny$renderPlot({       x <- datasets::faithful[, 2]       bins <- seq(min(x), max(x), length.out = input$bins + 1)       hist(         x,         breaks = bins,         col = \"darkgray\",         border = \"white\",         main = \"Histogram of x\",         ylab = \"Frequency\"       )     })   }) } # app/main.R  box::use(   shiny,   graphics[hist],   shiny.i18n[Translator, usei18n, update_lang], )  i18n <- Translator$new(translation_json_path = \"app/translations/translations.json\") i18n$set_translation_language(\"en\")  #' @export ui <- function(id) {   ns <- shiny$NS(id)   shiny$fluidPage(     usei18n(i18n),     shiny$div(       style = \"float: right;\",       shiny$selectInput(         ns(\"selected_language\"),         i18n$translate(\"Change language\"),         choices = i18n$get_languages(),         selected = i18n$get_key_translation()       )     ),     shiny$titlePanel(i18n$translate(\"Hello Shiny!\"), windowTitle = NULL),     shiny$sidebarLayout(       shiny$sidebarPanel(         shiny$sliderInput(           ns(\"bins\"),           i18n$translate(\"Number of bins:\"),           min = 1,           max = 50,           value = 30         )       ),       shiny$mainPanel(         shiny$plotOutput(ns(\"distPlot\")),         shiny$p(i18n$translate(\"This is description of the plot.\"))       )     )   ) }  ..."},{"path":"https://appsilon.github.io/shiny.i18n/articles/rhino.html","id":"translate-the-server-part","dir":"Articles","previous_headings":"Build a basic application","what":"Translate the server part","title":"shiny.i18n in Rhino applications","text":"missing part plot - title y-axis label. text rendered server, need add translator : Now, run application, everything work:","code":"# app/main.R  box::use(   shiny,   graphics[hist],   shiny.i18n[Translator, usei18n, update_lang], )  i18n <- Translator$new(translation_json_path = \"app/translations/translations.json\") i18n$set_translation_language(\"en\")  #' @export ui <- function(id) {   ns <- shiny$NS(id)   shiny$fluidPage(     usei18n(i18n),     shiny$div(       style = \"float: right;\",       shiny$selectInput(         ns(\"selected_language\"),         i18n$translate(\"Change language\"),         choices = i18n$get_languages(),         selected = i18n$get_key_translation()       )     ),     shiny$titlePanel(i18n$translate(\"Hello Shiny!\"), windowTitle = NULL),     shiny$sidebarLayout(       shiny$sidebarPanel(         shiny$sliderInput(           ns(\"bins\"),           i18n$translate(\"Number of bins:\"),           min = 1,           max = 50,           value = 30         )       ),       shiny$mainPanel(         shiny$plotOutput(ns(\"distPlot\")),         shiny$p(i18n$translate(\"This is description of the plot.\"))       )     )   ) }  #' @export server <- function(id) {   shiny$moduleServer(id, function(input, output, session) {     shiny$observeEvent(input$selected_language, {       update_lang(input$selected_language)     })      output$distPlot <- shiny$renderPlot({       x <- datasets::faithful[, 2]       bins <- seq(min(x), max(x), length.out = input$bins + 1)       hist(         x,         breaks = bins,         col = \"darkgray\",         border = \"white\",         main = i18n$translate(\"Histogram of x\"),         ylab = i18n$translate(\"Frequency\")       )     })   }) }"},{"path":"https://appsilon.github.io/shiny.i18n/articles/rhino.html","id":"add-inner-module","dir":"Articles","previous_headings":"","what":"Add inner module","title":"shiny.i18n in Rhino applications","text":"Rhino application usually built using multiple Shiny modules. can learn Rhino structure article. section, going show translator can used setup, moving main panel separate module. First, create new R file app/view/main_panel.R: Now, let’s move main panel app/main.R app/view/main_panel.R: important part notice Translator (i18n object) needs passed argument inner module. next step call main panel module app/main.R file: now run application, look behave previously. translation mechanism works, application code now better structured.  Congratulations! now fully armed operational battle station multilingual Rhino application!","code":"# app/view/main_panel.R  box::use(   shiny, )  #' @export ui <- function(id) {   ns <- shiny$NS(id)  }  #' @export server <- function(id) {   shiny$moduleServer(id, function(input, output, session) {    }) } # app/view/main_panel.R  box::use(   shiny,   graphics[hist], )  #' @export ui <- function(id, i18n) {   ns <- shiny$NS(id)    shiny$mainPanel(     shiny$plotOutput(ns(\"distPlot\")),     shiny$p(i18n$translate(\"This is description of the plot.\"))   ) }  #' @export server <- function(id, bins, i18n) {   shiny$moduleServer(id, function(input, output, session) {     output$distPlot <- shiny$renderPlot({       x <- datasets::faithful[, 2]       bins <- seq(min(x), max(x), length.out = bins() + 1)       hist(         x,         breaks = bins,         col = \"darkgray\",         border = \"white\",         main = i18n$translate(\"Histogram of x\"),         ylab = i18n$translate(\"Frequency\")       )     })   }) } # app/main.R  box::use(   shiny,   shiny.i18n[Translator, usei18n, update_lang], )  box::use(   app/view/main_panel )  i18n <- Translator$new(translation_json_path = \"app/translations/translations.json\") i18n$set_translation_language(\"en\")  #' @export ui <- function(id) {   ns <- shiny$NS(id)   shiny$fluidPage(     usei18n(i18n),     shiny$div(       style = \"float: right;\",       shiny$selectInput(         ns(\"selected_language\"),         i18n$translate(\"Change language\"),         choices = i18n$get_languages(),         selected = i18n$get_key_translation()       )     ),     shiny$titlePanel(i18n$translate(\"Hello Shiny!\"), windowTitle = NULL),     shiny$sidebarLayout(       shiny$sidebarPanel(         shiny$sliderInput(           ns(\"bins\"),           i18n$translate(\"Number of bins:\"),           min = 1,           max = 50,           value = 30         )       ),       main_panel$ui(ns(\"main_panel\"), i18n = i18n)     )   ) }  #' @export server <- function(id) {   shiny$moduleServer(id, function(input, output, session) {     shiny$observeEvent(input$selected_language, {       update_lang(input$selected_language)     })      main_panel$server(\"main_panel\", bins = shiny$reactive(input$bins), i18n = i18n)   }) }"},{"path":"https://appsilon.github.io/shiny.i18n/articles/translation_format.html","id":"json","dir":"Articles","previous_headings":"","what":"JSON","title":"Introduction to translation files format","text":"Let’s see example JSON translation file: file requires two mandatory fields: \"languages\" \"translation\". \"languages\" contains list languages codes. example call English: “engl”, decided keep shorter. order code IMPORTANT. first language \"languages\" list -called key translation, text use create Shiny app query translation. example, content Shiny app look like : position “en” \"languages\" defines key translation. , \"translation\" need put list dictionaries. dictionary maps language code text language. parameters optional: “cultural_date_format”, “cultural_bignumer_mark”, “cultural_punctuation_mark”. can load JSON file passing path translation_json_path argument Translator.","code":"{   \"languages\": [\"en\", \"pl\"],   \"translation\": [       {\"en\": \"Hello Shiny!\", \"pl\": \"Witaj Shiny!\"},       {         \"en\": \"Frequency\",         \"pl\": \"Częstotliwość\"       }     ],   \"cultural_date_format\": \"%d-%m-%Y\" } i18n$t(\"Hello Shiny!\") i18n <- Translator$new(translation_json_path = \"translation.json\")"},{"path":"https://appsilon.github.io/shiny.i18n/articles/translation_format.html","id":"csv","dir":"Articles","previous_headings":"","what":"CSV","title":"Introduction to translation files format","text":", let’s start looking example translation_it.csv. , name file important prefix: translation_, followed language code. Note CSV typically consists two columns. left column key translation code header. right one target translation code column name. code needs match csv file name. mind, let’s see create another CSV file. Klingon look like : translation_kling.csv Just remember follow -mentioned pattern keep files directory. can load CSV files passing path folder containing translation_csvs_path argument Translator. automatically detect files pattern: translation_*.csv, example: translation_it.csv Italian, translation_kling.csv Klingon . want set extra options (like : “cultural_date_format”, etc.) just create simple yaml file pass translation_csv_config argument Translator.","code":"en,it Hello Shiny!,Ciao Shiny! Frequency, Frequenza en,kling Hello Shiny!,bIpIv'a' Shiny! Frequency,chaDvay' i18n <- Translator$new(translation_csvs_path = \"translation_data/\")"},{"path":"https://appsilon.github.io/shiny.i18n/articles/translation_format.html","id":"addin","dir":"Articles","previous_headings":"","what":"Addin","title":"Introduction to translation files format","text":"convenience introduced addin builds demo translation file . detect places code wrapped tag: i18n$t i18n$translate. Just go “Addins” menu RStudio.  customized tags detection use create_translation_file function.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jakub Nowicki. Maintainer, author. Dominik Krzemiński. Author. Krystian Igras. Author. Jakub Sobolewski. Author. Appsilon Sp. z o.o.. Copyright holder.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nowicki J, Krzemiński D, Igras K, Sobolewski J (2022). shiny.i18n: Shiny Applications Internationalization. https://appsilon.github.io/shiny.i18n/, https://github.com/Appsilon/shiny.i18n.","code":"@Manual{,   title = {shiny.i18n: Shiny Applications Internationalization},   author = {Jakub Nowicki and Dominik Krzemiński and Krystian Igras and Jakub Sobolewski},   year = {2022},   note = {https://appsilon.github.io/shiny.i18n/, https://github.com/Appsilon/shiny.i18n}, }"},{"path":"https://appsilon.github.io/shiny.i18n/index.html","id":"shinyi18n-","dir":"","previous_headings":"","what":"Shiny Applications Internationalization","title":"Shiny Applications Internationalization","text":"Shiny applications internationalization made easy! Using simple: just prepare translation files one supported formats, read app using user-friendly shiny.i18n interface surround expressions translate translator tag. Thanks app remain neat readable. Actually, can use shiny.i18n standalone R package - shiny app just perfect use-case example. Change languages formats easy shiny.i18n.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/index.html","id":"how-to-install","dir":"","previous_headings":"","what":"How to install?","title":"Shiny Applications Internationalization","text":"Stable version: Development version:","code":"install.packages(\"shiny.i18n\") remotes::install_github(\"Appsilon/shiny.i18n\")"},{"path":"https://appsilon.github.io/shiny.i18n/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Shiny Applications Internationalization","text":"can find basic examples examples folder: Using i18n object CSV translation files JSON translation files. Live language change browser side server function renderUI. RMarkdown translations. Example translation data format.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/index.html","id":"translation-file-format","dir":"","previous_headings":"Examples","what":"Translation file format","title":"Shiny Applications Internationalization","text":"Currently shiny.i18n supports two translation formats: csv - translation separate file translation_<LANGUAGE-CODE>.csv containing two columns: key translation, language needs translated. Example translation_pl.csv Polish language may find : inst/examples/data/translation_pl.csv. load data passing path folder containing csv files: json - single json file translation.json mandatory fields: \"languages\" list language codes \"translation\" list dictionaries assigning translation language code. Example json file Polish language may find : inst/examples/data/translation.json. load data passing path json file.","code":"Translator$new(translation_csvs_path = \"...\") Translator$new(translation_json_path = \"...\")"},{"path":"https://appsilon.github.io/shiny.i18n/index.html","id":"shinyi18n-and-rhino","dir":"","previous_headings":"","what":"shiny.i18n and rhino","title":"Shiny Applications Internationalization","text":"shiny.i18n can used add live language change feature Shiny applications built using Rhino framework. details, check tutorial.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/index.html","id":"how-to-contribute","dir":"","previous_headings":"","what":"How to contribute?","title":"Shiny Applications Internationalization","text":"want contribute project please submit regular PR, ’re done new feature bug fix. Reporting bug also helpful - please use GitHub issues describe problem detailed possible.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/index.html","id":"appsilon","dir":"","previous_headings":"","what":"Appsilon","title":"Shiny Applications Internationalization","text":"Appsilon Posit (formerly RStudio) Full Service Certified Partner. Learn appsilon.com. Get touch opensource@appsilon.com Check Open Source tools.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/pull_request_template.html","id":null,"dir":"","previous_headings":"","what":"Title","title":"Title","text":"Short description (reference issue).","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":null,"dir":"Reference","previous_headings":"","what":"Translator R6 Class — Translator","title":"Translator R6 Class — Translator","text":"Translator R6 Class Translator R6 Class","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Translator R6 Class — Translator","text":"creates shinny.i18n Translator object used translations. Now can surround pieces text want translate one translate statements (ex.: Translator$t(\"translate \")). Find details method descriptions .","code":""},{"path":[]},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Translator R6 Class — Translator","text":"Translator$new() Translator$get_languages() Translator$get_translations() Translator$get_key_translation() Translator$get_translation_language() Translator$translate() Translator$t() Translator$set_translation_language() Translator$parse_date() Translator$parse_number() Translator$automatic_translate() Translator$() Translator$use_js() Translator$clone()","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Translator R6 Class — Translator","text":"Initialize Translator data","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translator R6 Class — Translator","text":"","code":"Translator$new(   translation_csvs_path = NULL,   translation_json_path = NULL,   translation_csv_config = NULL,   separator_csv = \",\",   automatic = FALSE )"},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translator R6 Class — Translator","text":"translation_csvs_path character path folder containing csv translation files. Files must \"translation_\" prefix, example: translation_<LANG-CODE>.csv. translation_json_path character path JSON translation file. See  Details. translation_csv_config character path configuration file csv option. separator_csv separator CSV values (default \",\") automatic logical flag, indicating i18n use automatic translation API.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"method-get-languages-","dir":"Reference","previous_headings":"","what":"Method get_languages()","title":"Translator R6 Class — Translator","text":"Get available languages","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Translator R6 Class — Translator","text":"","code":"Translator$get_languages()"},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"method-get-translations-","dir":"Reference","previous_headings":"","what":"Method get_translations()","title":"Translator R6 Class — Translator","text":"Get whole translation matrix","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Translator R6 Class — Translator","text":"","code":"Translator$get_translations()"},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"method-get-key-translation-","dir":"Reference","previous_headings":"","what":"Method get_key_translation()","title":"Translator R6 Class — Translator","text":"Get active key translation","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Translator R6 Class — Translator","text":"","code":"Translator$get_key_translation()"},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"method-get-translation-language-","dir":"Reference","previous_headings":"","what":"Method get_translation_language()","title":"Translator R6 Class — Translator","text":"Get current target translation language","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Translator R6 Class — Translator","text":"","code":"Translator$get_translation_language()"},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"method-translate-","dir":"Reference","previous_headings":"","what":"Method translate()","title":"Translator R6 Class — Translator","text":"Translates 'keyword' language specified 'set_translation_language'","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Translator R6 Class — Translator","text":"","code":"Translator$translate(keyword, session = shiny::getDefaultReactiveDomain())"},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translator R6 Class — Translator","text":"keyword character vector characters word expression translate session Shiny server session (default: current reactive domain)","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"method-t-","dir":"Reference","previous_headings":"","what":"Method t()","title":"Translator R6 Class — Translator","text":"Wrapper translate method.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Translator R6 Class — Translator","text":"","code":"Translator$t(keyword, session = shiny::getDefaultReactiveDomain())"},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translator R6 Class — Translator","text":"keyword character vector characters word expression translate session Shiny server session (default: current reactive domain)","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"method-set-translation-language-","dir":"Reference","previous_headings":"","what":"Method set_translation_language()","title":"Translator R6 Class — Translator","text":"Specify language translation. must exist 'languages' field.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Translator R6 Class — Translator","text":"","code":"Translator$set_translation_language(transl_language)"},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translator R6 Class — Translator","text":"transl_language character translation language code","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"method-parse-date-","dir":"Reference","previous_headings":"","what":"Method parse_date()","title":"Translator R6 Class — Translator","text":"Parse date format described 'cultural_date_format' field config.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Translator R6 Class — Translator","text":"","code":"Translator$parse_date(date)"},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translator R6 Class — Translator","text":"date date object format","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"method-parse-number-","dir":"Reference","previous_headings":"","what":"Method parse_number()","title":"Translator R6 Class — Translator","text":"Numbers parser. implemented yet.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Translator R6 Class — Translator","text":"","code":"Translator$parse_number(number)"},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translator R6 Class — Translator","text":"number numeric character number","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Translator R6 Class — Translator","text":"character number formatting","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"method-automatic-translate-","dir":"Reference","previous_headings":"","what":"Method automatic_translate()","title":"Translator R6 Class — Translator","text":"Translates 'keyword' language specified 'set_translation_language' using cloud service 'api'. need set API settings first.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Translator R6 Class — Translator","text":"","code":"Translator$automatic_translate(keyword, api = \"google\")"},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translator R6 Class — Translator","text":"keyword character vector characters word expression translate api character name API want use. Currently supported: google.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"method-at-","dir":"Reference","previous_headings":"","what":"Method at()","title":"Translator R6 Class — Translator","text":"Wrapper automatic_translate method","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Translator R6 Class — Translator","text":"","code":"Translator$at(keyword, api = \"google\")"},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translator R6 Class — Translator","text":"keyword character vector characters word expression translate api character name API want use. Currently supported: google.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"method-use-js-","dir":"Reference","previous_headings":"","what":"Method use_js()","title":"Translator R6 Class — Translator","text":"Call wrap translation span object. Used browser-side translations.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Translator R6 Class — Translator","text":"","code":"Translator$use_js()"},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Translator R6 Class — Translator","text":"objects class cloneable method.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Translator R6 Class — Translator","text":"","code":"Translator$clone(deep = FALSE)"},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translator R6 Class — Translator","text":"deep Whether make deep clone.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/Translator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translator R6 Class — Translator","text":"","code":"if (FALSE) {   i18n <- Translator$new(translation_json_path = \"translation.json\") # translation file   i18n$set_translation_language(\"it\")   i18n$t(\"This text will be translated to Italian\") }  # Shiny example if (interactive()) { library(shiny) library(shiny.i18n)  #to run this example  make sure that you have a translation file  #in the same path i18n <- Translator$new(translation_json_path = \"examples/data/translation.json\") i18n$set_translation_language(\"pl\") ui <- fluidPage(   h2(i18n$t(\"Hello Shiny!\")) ) server <- function(input, output) {} shinyApp(ui = ui, server = server) }"},{"path":"https://appsilon.github.io/shiny.i18n/reference/check_value_presence.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for value presence — check_value_presence","title":"Check for value presence — check_value_presence","text":"value present vector takes first value.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/check_value_presence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for value presence — check_value_presence","text":"","code":"check_value_presence(val, vect, warn_msg = \"\")"},{"path":"https://appsilon.github.io/shiny.i18n/reference/check_value_presence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for value presence — check_value_presence","text":"val element vector vect vect vector values warn_msg warning message displayed val vect","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/check_value_presence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for value presence — check_value_presence","text":"updated val","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/column_to_row.html","id":null,"dir":"Reference","previous_headings":"","what":"Column to row — column_to_row","title":"Column to row — column_to_row","text":"Returns data.frame one column rowname now.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/column_to_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Column to row — column_to_row","text":"","code":"column_to_row(data, colname)"},{"path":"https://appsilon.github.io/shiny.i18n/reference/column_to_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Column to row — column_to_row","text":"data data.frame data colname character column name","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/column_to_row.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Column to row — column_to_row","text":"data.frame one column less","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/create_translation_addin.html","id":null,"dir":"Reference","previous_headings":"","what":"Create translation file addin — create_translation_addin","title":"Create translation file addin — create_translation_addin","text":"Create translation file addin","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/create_translation_addin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create translation file addin — create_translation_addin","text":"","code":"create_translation_addin()"},{"path":"https://appsilon.github.io/shiny.i18n/reference/create_translation_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Create translation file — create_translation_file","title":"Create translation file — create_translation_file","text":"Auxiliary shiny.i18n function searches key expressions (e.g. surrounded i18n$t() tag script).","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/create_translation_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create translation file — create_translation_file","text":"","code":"create_translation_file(path, type = \"json\", handle = \"i18n\", output = NULL)"},{"path":"https://appsilon.github.io/shiny.i18n/reference/create_translation_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create translation file — create_translation_file","text":"path character path file needs inspected key translations type type example output file translations, either \"json\" \"csv\" handle name Translator object within script path output NULL (default) output saved default file name (\"translation.json\" JSON \"translate_lang.csv\" CSV)","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/dot-i18_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Global  i18n config list. — .i18_config","title":"Global  i18n config list. — .i18_config","text":"Global  i18n config list.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/dot-i18_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global  i18n config list. — .i18_config","text":"","code":".i18_config"},{"path":"https://appsilon.github.io/shiny.i18n/reference/dot-i18_config.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Global  i18n config list. — .i18_config","text":"object class list length 3.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/dot-onLoad.html","id":null,"dir":"Reference","previous_headings":"","what":"onLoad — .onLoad","title":"onLoad — .onLoad","text":"package load updates .i18_config reading yaml file config.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/dot-onLoad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"onLoad — .onLoad","text":"","code":".onLoad(libname, pkgname)"},{"path":"https://appsilon.github.io/shiny.i18n/reference/dot-onLoad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"onLoad — .onLoad","text":"libname library name pkgname package name","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/dot-translator_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Translator options — .translator_options","title":"Translator options — .translator_options","text":"Translator options","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/dot-translator_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translator options — .translator_options","text":"","code":".translator_options"},{"path":"https://appsilon.github.io/shiny.i18n/reference/dot-translator_options.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Translator options — .translator_options","text":"object class list length 3.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/extract_key_expressions.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract key expressions — extract_key_expressions","title":"Extract key expressions — extract_key_expressions","text":"Extract key expressions","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/extract_key_expressions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract key expressions — extract_key_expressions","text":"","code":"extract_key_expressions(text, handle = \"i18n\")"},{"path":"https://appsilon.github.io/shiny.i18n/reference/extract_key_expressions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract key expressions — extract_key_expressions","text":"text character text script handle character Translator object handle (default: 'i18n')","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/extract_key_expressions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract key expressions — extract_key_expressions","text":"vector characters key expressions","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/get_i18n_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Get i18n config — get_i18n_config","title":"Get i18n config — get_i18n_config","text":"Get i18n config","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/get_i18n_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get i18n config — get_i18n_config","text":"","code":"get_i18n_config(field)"},{"path":"https://appsilon.github.io/shiny.i18n/reference/get_i18n_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get i18n config — get_i18n_config","text":"field field configuration file","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/get_i18n_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get i18n config — get_i18n_config","text":"character option config.yaml file","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/i18n_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Create i18n state div — i18n_state","title":"Create i18n state div — i18n_state","text":"hidden div contain information i18 translation state.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/i18n_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create i18n state div — i18n_state","text":"","code":"i18n_state(init_language)"},{"path":"https://appsilon.github.io/shiny.i18n/reference/i18n_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create i18n state div — i18n_state","text":"init_language key language code","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/i18n_state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create i18n state div — i18n_state","text":"shiny tag div \"i18n-state\"","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/init_i18n.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates new i18n Translator object — init_i18n","title":"Creates new i18n Translator object — init_i18n","text":"Creates new i18n Translator object","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/init_i18n.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates new i18n Translator object — init_i18n","text":"","code":"init_i18n(   translation_csvs_path = NULL,   translation_json_path = NULL,   translation_csv_config = NULL,   automatic = FALSE )"},{"path":"https://appsilon.github.io/shiny.i18n/reference/init_i18n.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates new i18n Translator object — init_i18n","text":"translation_csvs_path character path folder containing csv translation files. See  Details. translation_json_path character path JSON translation file. See  Details. translation_csv_config character path configuration file csv option. automatic logical flag, indicating i18n use automatic translation API.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/init_i18n.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates new i18n Translator object — init_i18n","text":"i18n object","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/init_i18n.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates new i18n Translator object — init_i18n","text":"","code":"if (FALSE) {  i18n <- init_i18n(translation_csvs_path = \"../csvdata/\")  i18n <- init_i18n(translation_json_path = \"translations.json\") }"},{"path":"https://appsilon.github.io/shiny.i18n/reference/load_local_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Local YAML Config — load_local_config","title":"Load Local YAML Config — load_local_config","text":"Load Local YAML Config","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/load_local_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Local YAML Config — load_local_config","text":"","code":"load_local_config(yaml_config_path)"},{"path":"https://appsilon.github.io/shiny.i18n/reference/load_local_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Local YAML Config — load_local_config","text":"yaml_config_path path yaml config file","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/load_local_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Local YAML Config — load_local_config","text":"list config options empty list file exists","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/multmerge.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiple Merge — multmerge","title":"Multiple Merge — multmerge","text":"Inspired : https://www.r-bloggers.com/merging-multiple-data-files--one-data-frame/","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/multmerge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiple Merge — multmerge","text":"","code":"multmerge(filenames, sep = \",\")"},{"path":"https://appsilon.github.io/shiny.i18n/reference/multmerge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiple Merge — multmerge","text":"filenames character vector filenames sep fields separator","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/multmerge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiple Merge — multmerge","text":"data.frame merged files","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/read_and_merge_csvs.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and merge CSVs — read_and_merge_csvs","title":"Read and merge CSVs — read_and_merge_csvs","text":"function reads merges data multiple csv files given folder.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/read_and_merge_csvs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and merge CSVs — read_and_merge_csvs","text":"","code":"read_and_merge_csvs(dir_path, sep = \",\")"},{"path":"https://appsilon.github.io/shiny.i18n/reference/read_and_merge_csvs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and merge CSVs — read_and_merge_csvs","text":"dir_path character path directory csv files sep fields separator","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/read_and_merge_csvs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and merge CSVs — read_and_merge_csvs","text":"data.frame CSV files content","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/save_to_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Save example i18n file to CSV — save_to_csv","title":"Save example i18n file to CSV — save_to_csv","text":"saves translation data structure language key code \"key\" language translate name \"lang\" example translation csv file.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/save_to_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save example i18n file to CSV — save_to_csv","text":"","code":"save_to_csv(key_expressions, output_path = NULL)"},{"path":"https://appsilon.github.io/shiny.i18n/reference/save_to_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save example i18n file to CSV — save_to_csv","text":"key_expressions vector key expression translate output_path character path output file (default: \"translate_lang.csv\" NULL)","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/save_to_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Save example i18n file to json — save_to_json","title":"Save example i18n file to json — save_to_json","text":"saves translation data structure language key code \"key\" example translation JSON file.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/save_to_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save example i18n file to json — save_to_json","text":"","code":"save_to_json(key_expressions, output_path = NULL)"},{"path":"https://appsilon.github.io/shiny.i18n/reference/save_to_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save example i18n file to json — save_to_json","text":"key_expressions vector key expression translate output_path character path output file (default: \"translation.json\" NULL)","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/translate_with_google_cloud.html","id":null,"dir":"Reference","previous_headings":"","what":"This provides functions for automatic translations with online APIs\nTranslate with Google cloud — translate_with_google_cloud","title":"This provides functions for automatic translations with online APIs\nTranslate with Google cloud — translate_with_google_cloud","text":"wrapper gl_translate function googleLanguageR package.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/translate_with_google_cloud.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This provides functions for automatic translations with online APIs\nTranslate with Google cloud — translate_with_google_cloud","text":"","code":"translate_with_google_cloud(txt_to_translate, target_lang)"},{"path":"https://appsilon.github.io/shiny.i18n/reference/translate_with_google_cloud.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This provides functions for automatic translations with online APIs\nTranslate with Google cloud — translate_with_google_cloud","text":"txt_to_translate character text translate target_lang character language code","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/update_lang.html","id":null,"dir":"Reference","previous_headings":"","what":"Update language (i18n) in UI — update_lang","title":"Update language (i18n) in UI — update_lang","text":"sends message session object update language UI elements.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/update_lang.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update language (i18n) in UI — update_lang","text":"","code":"update_lang(language, session = shiny::getDefaultReactiveDomain())"},{"path":"https://appsilon.github.io/shiny.i18n/reference/update_lang.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update language (i18n) in UI — update_lang","text":"language character language code session Shiny server session (default: current reactive domain)","code":""},{"path":[]},{"path":"https://appsilon.github.io/shiny.i18n/reference/usei18n.html","id":null,"dir":"Reference","previous_headings":"","what":"Use i18n in UI — usei18n","title":"Use i18n in UI — usei18n","text":"auxiliary function needed monitor state UI live language translations.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/usei18n.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use i18n in UI — usei18n","text":"","code":"usei18n(translator)"},{"path":"https://appsilon.github.io/shiny.i18n/reference/usei18n.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use i18n in UI — usei18n","text":"translator shiny.i18 Translator object","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/usei18n.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use i18n in UI — usei18n","text":"","code":"if (interactive()) {   library(shiny)   library(shiny.i18n)   # for this example to run make sure that you have a translation file   # in the same path   i18n <- Translator$new(translation_json_path = \"translation.json\")   i18n$set_translation_language(\"en\")    ui <- fluidPage(     usei18n(i18n),     actionButton(\"go\", \"GO!\"),     h2(i18n$t(\"Hello Shiny!\"))   )    server <- shinyServer(function(input, output, session) {     observeEvent(input$go,{       update_lang(session, \"pl\")     })   })    shinyApp(ui = ui, server = server) }"},{"path":"https://appsilon.github.io/shiny.i18n/reference/validate_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Column Names — validate_names","title":"Validate Column Names — validate_names","text":"Validate n-th column name data.frames (given list) .","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/validate_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Column Names — validate_names","text":"","code":"validate_names(list_df, n = 1)"},{"path":"https://appsilon.github.io/shiny.i18n/reference/validate_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Column Names — validate_names","text":"list_df list data frames n integer denoting column number","code":""},{"path":"https://appsilon.github.io/shiny.i18n/reference/validate_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Column Names — validate_names","text":"TRUE names n-th columns data.frames , FALSE otherwise.","code":""},{"path":"https://appsilon.github.io/shiny.i18n/news/index.html","id":"shinyi18n-development-version","dir":"Changelog","previous_headings":"","what":"shiny.i18n (development version)","title":"shiny.i18n (development version)","text":"shiny.i18n full compatibility rhino applications get_translation_language method added Translator class fixed regex extract_key_expressions translator reads CSV files “translation_” prefix added default session value update_lang","code":""},{"path":"https://appsilon.github.io/shiny.i18n/news/index.html","id":"shinyi18n-020","dir":"Changelog","previous_headings":"","what":"shiny.i18n 0.2.0","title":"shiny.i18n 0.2.0","text":"CRAN release: 2020-10-02 preproc script preprocessing functions - create example translation CSV, JSON files RStudio addin searches i18nt tags JS bindings identify html elements i18n class ui script ui translations related function automatic translations via API (currently google cloud supported) increased test coverage 63% 2 vignettes tutorials examples live language translation UI side automatic translation via API pkgdown documentation Translator class R6 class now translate method now automatically detects whether object UI server applies reactive JS translation accordingly","code":""},{"path":"https://appsilon.github.io/shiny.i18n/news/index.html","id":"shinyi18n-010","dir":"Changelog","previous_headings":"","what":"shiny.i18n 0.1.0","title":"shiny.i18n 0.1.0","text":"CRAN release: 2018-09-13 Translator reference class examples basic json csv usage live language translation server side","code":""}]
